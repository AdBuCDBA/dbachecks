function Start-DbcPowerBi {
	<#
		.SYNOPSIS
			Launches the PowerBi Template for dbachecks
		
		.DESCRIPTION
			Launches the PowerBi Template for dbachecks
	
		.PARAMETER Path
			The location of the pbix file. "$script:ModuleRoot\bin\dbachecks.pbix" by default.
	
		.PARAMETER EnableException
			By default, when something goes wrong we try to catch it, interpret it and give you a friendly warning message.
			This avoids overwhelming you with "sea of red" exceptions, but is inconvenient because it basically disables advanced scripting.
			Using this switch turns this "nice by default" feature off and enables you to catch exceptions with your own try/catch.
			
		.EXAMPLE
			Start-DbcPowerBi
		
			Launches PowerBi from "$script:ModuleRoot\bin\dbachecks.pbix" using "C:\windows\Temp\dbachecks.json" (generated by Update-DbcPowerBiDataSource) as the datasource.

		.EXAMPLE
			Start-DbcPowerBi -Path \\nas\projects\dbachecks.pbix
		
			Launches \\nas\projects\dbachecks.pbix using "C:\windows\Temp\dbachecks.json" as the datasource
	
		.EXAMPLE
			Start-DbcPowerBi -Path \\nas\projects\dbachecks.pbix -DataSource "C:\windows\Temp\dbachecks.json"
		
			Launches \\nas\projects\dbachecks.pbix using "C:\windows\Temp\dbachecks.json" as the datasource
    #>
	[CmdletBinding()]
	param (
		[string]$Path = "$script:ModuleRoot\bin\dbachecks.pbix",
		[string]$DataSource = "C:\windows\Temp\dbachecks.json",
		[switch]$EnableException
	)

	process {
		if (-not (Test-Path -Path $Path)) {
			Stop-PSFFunction -Message "$Path does not exist"
			return
		}
		
		if (-not (Test-Path -Path $DataSource)) {
			Stop-PSFFunction -Message "json file not found. Run Update-DbcPowerBiDataSource to auto generate"
			return
		}
		
		$association = Get-ItemProperty "Registry::HKEY_Classes_root\.pbix"
		
		if (-not $association) {
			Stop-PSFFunction -Message ".pbix not associated with any program. Please (re)install Power BI"
			return
		}
		
		try {
			Invoke-Item -Path "$script:ModuleRoot\bin\dbachecks.pbix"
		}
		catch {
			Stop-PSFFunction -Message "Failure" -Exception $_
			return
		}
	}
}